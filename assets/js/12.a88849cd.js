(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{194:function(e,t,o){"use strict";o.r(t);var r=o(0),n=Object(r.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),o("p",[e._v("Welcome to the "),o("strong",[e._v("Z Open Editor for COBOL and PL/I")]),e._v(", an extension for Visual Studio Code that provides language support for the IBM Enterprise "),o("a",{attrs:{href:"https://www.ibm.com/us-en/marketplace/ibm-cobol",target:"_blank",rel:"noopener noreferrer"}},[e._v("COBOL"),o("OutboundLink")],1),e._v(" and "),o("a",{attrs:{href:"https://www.ibm.com/us-en/marketplace/pli-compiler-zos",target:"_blank",rel:"noopener noreferrer"}},[e._v("PL/I"),o("OutboundLink")],1),e._v(" programming languages for z/OS. It also includes simple syntax highlighting for "),o("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/zosbasics/com.ibm.zos.zconcepts/zconc_whatisjcl.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCL"),o("OutboundLink")],1),e._v(" (Job Control Language).")]),e._v(" "),o("p",[e._v("The extension is realizing its languages support by implementing fully functional "),o("a",{attrs:{href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("language servers"),o("OutboundLink")],1),e._v(", implemented in Java, together with additional editor enhancements that enable mainframe developers to utilize features such as:")]),e._v(" "),o("ul",[o("li",[e._v("syntax highlighting")]),e._v(" "),o("li",[e._v("outline view and outline search")]),e._v(" "),o("li",[e._v("declaration hovers")]),e._v(" "),o("li",[e._v("peek definition code lenses")]),e._v(" "),o("li",[e._v("go to definition")]),e._v(" "),o("li",[e._v("find all references code lenses as well as explorer")]),e._v(" "),o("li",[e._v("code and variable completion")]),e._v(" "),o("li",[e._v("code template snippets")]),e._v(" "),o("li",[e._v("finding and navigating references")]),e._v(" "),o("li",[e._v("previewing of included copybooks/include files (local file system only)")]),e._v(" "),o("li",[e._v("navigate to copybooks/include files")]),e._v(" "),o("li",[e._v('refactoring such as "rename symbol"')]),e._v(" "),o("li",[e._v("COBOL complexity metrics view")]),e._v(" "),o("li",[e._v("search and replace refactoring across multiple program files")])]),e._v(" "),o("p",[e._v("See the "),o("router-link",{attrs:{to:"/Docs/knownissues.html"}},[e._v("Known issues and limitations")]),e._v(" page for details in which LSP features are working and which are work in progress.")],1),e._v(" "),o("h3",{attrs:{id:"key-capabilities"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#key-capabilities","aria-hidden":"true"}},[e._v("#")]),e._v(" Key Capabilities")]),e._v(" "),o("p",[e._v("Here are some key benefits and use cases for the Z Open Editor for COBOL and PL/I features.")]),e._v(" "),o("ul",[o("li",[o("p",[o("em",[e._v("Uses VS Code to provide a modern editing experience for COBOL and PL/I development")])]),e._v(" "),o("p",[e._v("Microsoft's Visual Studio Code is rapidly becoming the most popular development environnement as shown by recent surveys such as "),o("a",{attrs:{href:"https://insights.stackoverflow.com/survey/2019#development-environments-and-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Stackoverflow 2019]"),o("OutboundLink")],1),e._v(" or "),o("a",{attrs:{href:"https://triplebyte.com/blog/editor-report-the-rise-of-visual-studio-code",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Triplebyte]"),o("OutboundLink")],1),e._v(". Many current and next generation developers will therefore have some or significant experience with VS Code. Based on these surveys it is likely that they really like the editor and want to use it for all of their projects. Therefore providing IBM Enterprise language support in VS Code will help allow many developers to use their most popular editor and make enterprise programming more attractive as well as more productive, because of the many thousands of other extensions in the VS Code Marketplace that can be integrated.")])]),e._v(" "),o("li",[o("p",[o("em",[e._v("Full language support via the Language Server Protocol")])]),e._v(" "),o("p",[e._v("By providing "),o("a",{attrs:{href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Language Server Protocol (LSP)"),o("OutboundLink")],1),e._v(" implementations, the extensions supports many of the capabilities for COBOL and PL/I that developers are used to for other languages and that were not available in traditional editing environments such as "),o("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/zosbasics/com.ibm.zos.zconcepts/zconcepts_138.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISPF"),o("OutboundLink")],1),e._v(". See above for an extensive list. Although supported by many other editors now the language server protocol was specifically created for VS Code and therefore the best and recommend way for providing language support in the editor.")])]),e._v(" "),o("li",[o("p",[o("em",[e._v("Extended language server capabilities for more productivity")])]),e._v(" "),o("p",[e._v("In addition to the capabilities specified in the language server protocol we extended the implementation with more capabilities that we believe enterprise developers find useful. For example, you can use hovers for COBOL "),o("code",[e._v("COPY")]),e._v(" and PL/I "),o("code",[e._v("%INCLUDE")]),e._v(" statements to preview the contents of the copybooks without the need to open then in a separate editor tab and navigating away from your current editing position.")]),e._v(" "),o("p",[e._v("Another example is the COBOL LSP dynamically computing at every Save a number of key software quality metrics such as "),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Halstead_complexity_measures",target:"_blank",rel:"noopener noreferrer"}},[e._v("Halstead's"),o("OutboundLink")],1),e._v(" Cyclomatic Complexity, Delivered Bugs, Program Volume, Effort, Difficulty, and others. You can observe the impact of your changes on your code as you work as the metrics viewer will track the changes since opening the file as well as set thresholds on the metrics that you want to get notified about.")])]),e._v(" "),o("li",[o("p",[o("em",[e._v("Integrates with modern Software Configuration Management (SCM) solutions")])]),e._v(" "),o("p",[e._v("Even if your organization does not standardize on an SCM, using one such as the integrated VS Code Git capabilities and popular extension such as "),o("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gitlens"),o("OutboundLink")],1),e._v(' locally in a workspace will give you a boost in productivity. You can work on COBOL and PL/I programs locally on your development machine and snapshot work at any point in time, go back or branch into alternative explorations, merge your or your colleagues\' branches back in, or just revert back to any earlier state of your code in a flash. Use side-by-side views and "blame" annotations to explore exactly what changed between snapshots, when and how it looked before. See exactly for each line when it last changed and by whom. Explore the entire history of all changes for a specific file or all files in your workspace in a chronological history viewer.')])]),e._v(" "),o("li",[o("p",[o("em",[e._v("z/OS interactions using the Open Source Zowe clients")])]),e._v(" "),o("p",[e._v("If you have z/OSMF configured then you can use "),o("a",{attrs:{href:"https://zowe.github.io/docs-site/latest/user-guide/cli-usingcli.html#displaying-zowe-cli-help",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe CLI"),o("OutboundLink")],1),e._v(" and the "),o("a",{attrs:{href:"https://zowe.github.io/docs-site/latest/user-guide/cli-vscodeplugin.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe VS Code Extension"),o("OutboundLink")],1),e._v(" to load and edit your files directly from z/OS or download them into your local workspace, add them to Git to control your changes, and then later upload the changed files into the same or new data sets to compile and run our application. You can do all of these from within the Z Open Editor with right-click and dialog interactions, as well as command line operations using the VS Code Terminal view that integrates right below your editor, giving you one central view to everything.")]),e._v(" "),o("p",[e._v("Once configured, the Z Open Editor capabilities can also take advantage of the Zowe CLI protocol for resolving dependencies over the network. For example, you can editor your COBOL programs locally, but resolve copybook dependencies directly out of MVS using the same Zowe connections.")])])])])},[],!1,null,null,null);t.default=n.exports}}]);